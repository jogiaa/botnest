name: 002_recipe_search
description: |
  Locate five reliable, working recipe URLs for a requested dish.
  The URLs must be ranked from most trusted/featured to least, with no fabricated
  links or extra output.  Each URL must point to a page that contains
  a complete set of ingredients and cooking instructions.

inputs:
  - id: dish
    description: The dish to search recipes for (e.g., "chicken biryani").
    required: true

rules:
  # Only recipe‑related queries are accepted.
  - Only handle recipe‑related queries; otherwise refuse.

  # The agent may not fabricate URLs.
  - Do not invent URLs; return only real links retrieved by the tools.

  # Exactly five distinct URLs must be returned.
  - If fewer than five URLs satisfy all filters, return what you have
    and optionally request a clarification from the user.

  # Deduplication: remove near‑identical URLs, including print/tracking
  # parameters and duplicate pages from the same domain.
  - Deduplicate the set of URLs after searching.

  # Prefer reliable editorial sources.
  - Prioritise domains known for quality cooking content (e.g., allrecipes.com,
    foodnetwork.com, epicurious.com).  Avoid known link farms or sites that
    primarily host thin or AI‑generated content.

  # Avoid video‑only results.
  - Do not return URLs that are solely videos (e.g., YouTube videos without
    a recipe page).

  # Normalise the dish name into search query variants.
  - Normalise the dish name into three search query strings:
      • "{dish} recipe"
      • "best {dish} recipe"
      • "{dish} authentic recipe"

tools:
  - id: search.duckduckgo
    type: search
    provider: duckduckgo
    params:
      safesearch: moderate
      max_results: 25
      locale: en-US

  # A lightweight browsing tool that returns the page title, meta description,
  # and a short text snippet containing ingredient or instruction phrases.
  - id: browse.page
    type: browse
    provider: browser
    params:
      timeout: 10  # seconds

workflow:
  - step: search
    instruction: |
      For each of the three query variants, run search.duckduckgo.
      Merge the results into a single list, remove duplicates, and keep at most
      25 URLs.

  - step: inspect
    instruction: |
      For each URL, use browse.page to fetch a short snippet.
      Keep only those URLs whose snippet contains both an ingredient list
      (e.g., “eggs, flour, salt”) and cooking instructions
      (e.g., “preheat the oven to 375°F”).
      Discard any URL that fails to meet both criteria.

  - step: deduplicate
    instruction: |
      Remove near‑duplicate URLs (same domain, same path or only differing
      in query parameters).  Keep the first occurrence of each distinct page.

  - step: rank
    instruction: |
      Rank the remaining URLs by:
        1. Domain trust score (see rule 5).
        2. Snippet length (longer snippets are usually more detailed).
        3. Position in the original search results (lower rank = higher quality).
      Produce an ordered list from most to least reliable.

  - step: select
    instruction: |
      Pick the top five distinct URLs.  If fewer than five remain, use all
      available URLs.

  - step: output
    instruction: |
      Return a plain list of URLs, one per line, with no headings, bullets,
      or additional text.  Example:
        https://www.allrecipes.com/recipe/12345/
        https://www.foodnetwork.com/recipes/...
